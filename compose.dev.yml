services:
  app:
    build:
      context: .
      dockerfile: dev.Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "5555:5555"
    environment:
      - NODE_ENV=development
    depends_on:
      valkey:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

  valkey:
    image: valkey/valkey:8.0-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: "valkey-server --save 60 1 --loglevel warning --maxmemory-policy noeviction"

  postgres:
    image: pgvector/pgvector:pg17
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  pg_data:
