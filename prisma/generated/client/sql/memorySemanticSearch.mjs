
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */
import { makeTypedQueryFactory as $mkFactory } from "../runtime/library"
export const memorySemanticSearch = /*#__PURE__*/ $mkFactory("\nWITH\nuser_memories AS (\nSELECT * from memory\nWHERE \"userId\" = $1\n),\nmemory_embeddings AS (\nSELECT * from embedding\nWHERE \"memoryId\" IN (SELECT id FROM user_memories)\n),\nall_similarities AS (\nSELECT\nm.*,\ne.vector,\ne.\"memoryId\",\n1 - (e.vector <=> $2::vector) AS cosine_similarity\nFROM\nuser_memories m\nJOIN\nmemory_embeddings e ON e.\"memoryId\" = m.id\n),\nmax_similarities AS (\nSELECT\n\"memoryId\",\nMAX(cosine_similarity) AS max_cosine_similarity\nFROM\nall_similarities\nGROUP BY\n\"memoryId\"\n)\n\nSELECT\na.id,\na.content,\na.\"createdAt\",\na.\"updatedAt\",\na.\"userId\",\na.\"diaryId\",\na.cosine_similarity AS score\nFROM\nall_similarities a\nJOIN\nmax_similarities m ON a.\"memoryId\" = m.\"memoryId\" AND a.cosine_similarity = m.max_cosine_similarity\nORDER BY\na.cosine_similarity DESC\nLIMIT $3 OFFSET $4;")
