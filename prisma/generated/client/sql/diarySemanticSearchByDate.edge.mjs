
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */
import { makeTypedQueryFactory as $mkFactory } from "../runtime/edge.js"
export const diarySemanticSearchByDate = /*#__PURE__*/ $mkFactory("\nWITH\nuser_diaries AS (\nSELECT\n*,\n(\nSELECT JSON_AGG(\nJSON_BUILD_OBJECT(\n'id', m.id,\n'content', m.content,\n'createdAt', m.\"createdAt\",\n'updatedAt', m.\"updatedAt\",\n'userId', m.\"userId\",\n'diaryId', m.\"diaryId\"\n)\n)\nFROM memory m\nWHERE m.\"diaryId\" = d.id\n) AS memories,\n(\nSELECT COUNT(*)\nFROM embedding e\nWHERE e.\"diaryId\" = d.id\n) AS \"embeddingCount\"\nFROM diary d\nWHERE \"userId\" = $1\n),\ndiary_embeddings AS (\nSELECT * FROM embedding\nWHERE \"diaryId\" IN (SELECT id FROM user_diaries)\n),\nall_similarities AS (\nSELECT\nd.*,\ne.vector,\ne.\"diaryId\",\n1 - (e.vector <=> $2::vector) AS cosine_similarity\nFROM\nuser_diaries d\nJOIN\ndiary_embeddings e ON e.\"diaryId\" = d.id\n),\nmax_similarities AS (\nSELECT\n\"diaryId\",\nMAX(cosine_similarity) AS max_cosine_similarity\nFROM\nall_similarities\nGROUP BY\n\"diaryId\"\n),\nordered_results AS (\nSELECT\na.id,\na.content,\na.date,\na.\"createdAt\",\na.\"updatedAt\",\na.\"userId\",\na.cosine_similarity AS score,\nCOUNT(*) OVER() as total,\na.memories,\na.sentiment,\na.\"embeddingCount\"\nFROM\nall_similarities a\nJOIN\nmax_similarities m ON a.\"diaryId\" = m.\"diaryId\" AND a.cosine_similarity = m.max_cosine_similarity\nORDER BY\nCASE WHEN $5 = 'DESC' THEN a.date END DESC,\nCASE WHEN $5 = 'ASC' THEN a.date END ASC\n)\nSELECT *\nFROM ordered_results\nLIMIT $3 OFFSET $4;")
