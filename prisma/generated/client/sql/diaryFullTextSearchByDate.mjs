
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */
import { makeTypedQueryFactory as $mkFactory } from "../runtime/library"
export const diaryFullTextSearchByDate = /*#__PURE__*/ $mkFactory("\nSELECT\nd.*,\nts_rank_cd(to_tsvector('korean', d.content), websearch_to_tsquery('korean', $2)) AS score,\nCOUNT(*) OVER() as total,\n(\nSELECT JSON_AGG(\nJSON_BUILD_OBJECT(\n'id', m.id,\n'content', m.content,\n'createdAt', m.\"createdAt\",\n'updatedAt', m.\"updatedAt\",\n'userId', m.\"userId\",\n'diaryId', m.\"diaryId\"\n)\n)\nFROM memory m\nWHERE m.\"diaryId\" = d.id\n) AS memories,\n(\nSELECT COUNT(*)\nFROM embedding e\nWHERE e.\"diaryId\" = d.id\n) AS \"embeddingCount\"\nFROM\ndiary d\nWHERE\nd.\"userId\" = $1\nAND\nto_tsvector('korean', d.content) @@ websearch_to_tsquery('korean', $2)\nORDER BY\nCASE WHEN $5 = 'DESC' THEN d.date END DESC,\nCASE WHEN $5 = 'ASC' THEN d.date END ASC,\nts_rank_cd(to_tsvector('korean', d.content), websearch_to_tsquery('korean', $2)) DESC\nLIMIT $3 OFFSET $4;")
